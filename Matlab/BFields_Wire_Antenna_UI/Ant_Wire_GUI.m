% Alexander Moreno
% 12-11-2019
%
% [main code at the moment]
% making changes

function [] = Ant_Wire_GUI()
    % inputs
    global Units;
    global AntDim; 
    global Bdim;
    global Tag;
    % outputs
    global A;
    global B;
    global RR;
    global M;
    
    v0 = 'm';
    % inputs
    Units = struct('h',v0,'W',v0,'L',v0,'wT',v0,'phi',v0,'dimx',...
        v0,'dimy',v0,'dimz',v0,'dimI',v0,'dimBF',v0);
    v0 = 0;
    AntDim = struct('h',v0,'ra',v0,'ri',v0,'wT',v0,'N',v0,'O',v0,...
        'phi',v0,'W',v0,'L',v0,'Nxy',v0,'v',v0);
    Bdim  = struct('Nx',v0,'xmin',v0,'xmax',v0,'Ny',v0,'ymin',v0,...
    'ymax',v0,'Nz',v0,'zmin',v0,'zmax',v0,'I',v0,'v','v0'); 
    Tag   = struct('r',v0,'L',v0,'N',v0,'AZ',v0,'EL',v0,'ur',2099);
    % outputs
    A  = struct('X',v0,'Y',v0,'Z',v0);
    B  = struct('BX',v0,'BY',v0,'BZ',v0,'X',v0,'Y',v0,'Z',v0);
    RR = struct('ReadRange',v0,'X',v0,'Y',v0,'Z',v0);
    M  = struct('MutalInd',v0);
    
    SCR = get(0,'Screensize');
    % creates figure
    fx = SCR(3)/4-200; fy = SCR(4)/4-200; fdx = 825+390; fdy = 400;
    S.fh = figure('numbertitle','off',...
                  'menubar','none',...
                  'units','pixels',...
                  'position',[fx ,fy , fdx, fdy],...
                  'name','Wire Antenna Design Tool',...
                  'resize','off');
    set(S.fh,'UserData',struct('v',1));
    set(S.fh,'UserData',struct('wireAnt',A,'BFields',B,...
                    'readRange',RR))
    % creates empty plot
    px=50; py=100; pdx=300; pdy=230;
    S.axB = axes('units','pixels','position',[50 100 300 230]);  
    rotate3d on;
    S.axT = axes('units','pixels','position',[750 100 300 230]);
    xlabel('x'); ylabel('y'); zlabel('z');
    rotate3d on; view(-41,27); grid on;
    % Toggles will act as the tabs.              
    tg_x  = 5; tg_y  = 355; tg_px = 90; tg_py = 40;
    S.tg(1) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x, tg_y, tg_px, tg_py],...
                        'string','Rectangular',...
                        'val',1);
    S.tg(2) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+tg_px, tg_y, tg_px, tg_py],...
                        'string','Elliptical',...
                        'value',1,...
                        'enable','on');
    S.tg(3) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+2*tg_px tg_y tg_px tg_py],...
                        'string','Import',...
                        'value',1,...
                        'enable','on');
    S.tg(4) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+6*tg_px tg_y tg_px tg_py],...
                        'string','Run',...
                        'value',1,...
                        'enable','on');
    S.tg(5) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+7*tg_px tg_y tg_px tg_py],...
                        'string','Export',...
                        'value',1,...
                        'enable','on');
    S.tg(6) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+8*tg_px tg_y tg_px tg_py],...
                        'string','About',...
                        'value',1,...
                        'enable','on');
    
    %dd_dx = 50; dd_dy = 25; tx=px+pdx; ddx = tx+dd_dx*2; 
    S.tg(7) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+12*tg_px, tg_y*0.38,tg_px, tg_py],...
                        'string','Plot:Tag',...
                        'value',1,...
                        'enable','on');
    S.tg(8) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+tg_px*0.5, tg_y*0.1,tg_px*1.1, tg_py],...
                        'string','Plot:Antenna Wire',...
                        'value',1,...
                        'enable','on');
    S.tg(9) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+tg_px*1.6, tg_y*0.1,tg_px, tg_py],...
                        'string','Plot:B-Fields',...
                        'value',1,...
                        'enable','on');
    S.tg(10) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+tg_px*2.6, tg_y*0.1,tg_px, tg_py],...
                        'string','Plot:Read-Range',...
                        'value',1,...
                        'enable','on');
   S.sl = uicontrol('style','slide',...
                 'unit','pix',...
                 'position',[tg_x+tg_px*0.5, tg_y*0.025,tg_px, tg_py*0.5],...
                 'min',1,'max',100,'val',50, 'visible','off'); 
   %'position',[tg_x+8*tg_px tg_y tg_px tg_py],...
                        
%% drop down list    
    %ddList = {'[m]','[cm]','[mm]','[in]'};
    %hList  = {'[mil]','[m]','[cm]','[mm]','[in]'};
    
    ddList = {'[mm]','[cm]','[m]','[in]'};
    hList  = {'[mm]','[cm]','[m]','[in]'};
    wtList = {'[AWG]','[m]','[cm]','[mm]','[in]'};
    dList  = {'[deg]','[rad]'}; 
    aList  = {'[A]','[mA]','[uA]','[nA]'};
    sList  = {'[FAST]','[SLOW]'};
    
    dd_dx = 50; dd_dy = 25; 
    tx=px+pdx;
    ddx = tx+dd_dx*2;
    % h
    S.dd(1) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx, pdy+py-dd_dy*1.05, dd_dx, dd_dy],...
                 'string',hList);
    % ra
    S.dd(2) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx,pdy+py-dd_dy*2.05, dd_dx, dd_dy],...
                 'string',ddList);  
    % ri
    S.dd(3) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx, pdy+py-dd_dy*3.05, dd_dx, dd_dy],...
                 'string',ddList);  
    % wT
    S.dd(4) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx, pdy+py-dd_dy*4.05, dd_dx+5, dd_dy],...
                 'string',wtList);
    % phi
    S.dd(5) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx, pdy+py-dd_dy*8.05, dd_dx, dd_dy],...
                 'string',dList);    
   % xdim
    S.dim_dd(1) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[tx*1.5+dd_dx*2.4,pdy+py-dd_dy*1.5,dd_dx,...
                 dd_dy],'string',ddList);     
   % ydim
    S.dim_dd(2) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[tx*1.5+dd_dx*2.4,pdy+py-dd_dy*3.25,dd_dx,...
                 dd_dy],'string',ddList);
   % zim
    S.dim_dd(3) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[tx*1.5+dd_dx*2.4,pdy+py-dd_dy*5,dd_dx,...
                 dd_dy],'string',ddList);
    % I 
    S.dim_dd(4) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx, pdy+py-dd_dy*9.05, dd_dx, dd_dy],...
                 'string',aList);
    % SLOW/FAST
    S.dim_dd(5) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[tg_x+6*tg_px-60, tg_y-20, 60, 50],...
                 'string',sList);
    % tag_radius
    S.tag_dd(1) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[tx*3.05+dd_dx*1.6,pdy+py-dd_dy*1.75, dd_dx,... 
                 dd_dy],'string',ddList);    
    % tag_length
    S.tag_dd(2) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[tx*3.05+dd_dx*1.6,pdy+py-dd_dy*2.75, dd_dx,... 
                 dd_dy],'string',ddList);    
    % tag az
    S.tag_dd(3) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[tx*3.05+dd_dx*1.6,pdy+py-dd_dy*4.75, dd_dx,... 
                 dd_dy],'string',dList);    
    % tag el
    S.tag_dd(4) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[tx*3.05+dd_dx*1.6,pdy+py-dd_dy*5.75, dd_dx,... 
                 dd_dy],'string',dList);    
        
%% text 
    % h
    S.ep_txt(1) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*1.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'h'});          
    % ra
    S.ep_txt(2) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*2.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'ra'});
    % ri
    S.ep_txt(3) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*3.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'ri'});          
    % wT
    S.ep_txt(4) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*4.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'wT'});
    % N
    S.ep_txt(5) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*5.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'N'});
    % Nxy
    S.ep_txt(6) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*6.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'Nxy'});          
    % phi
    S.ep_txt(7) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*8.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'phi'});
    % W
    S.ep_txt(8) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*2.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'W'});
    % L
    S.ep_txt(9) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*3.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'L'}); 
    % O
    S.ep_txt(10) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*7.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'O'});
    % I
    S.ep_txt(11) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*9.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'I'});
    % Nx
    S.dim_txt(1) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*1.48, pdy+py-dd_dy, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'Nx'});
    % xmin
    S.dim_txt(2) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*1.58, pdy+py-dd_dy, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'xmin'});
    % xmax
    S.dim_txt(3) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*1.68, pdy+py-dd_dy, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'xmax'});
    % Ny
    S.dim_txt(4) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*1.48, pdy+py-dd_dy*2.75, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'Ny'});
    % ymin
    S.dim_txt(5) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*1.58, pdy+py-dd_dy*2.75, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'ymin'});
    % ymax
    S.dim_txt(6) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*1.68, pdy+py-dd_dy*2.75, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'ymax'});         
    % Nz
    S.dim_txt(7) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*1.48, pdy+py-dd_dy*4.35, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'Nz'});
    % zmin
    S.dim_txt(8) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*1.58, pdy+py-dd_dy*4.35, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'zmin'});
    % zmax
    S.dim_txt(9) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*1.68, pdy+py-dd_dy*4.35, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'zmax'});
    % tag_radius
    S.dim_txt(10) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*3.05, pdy+py-dd_dy*2, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'radius'});
    % tag_length
    S.dim_txt(11) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*3.05, pdy+py-dd_dy*3, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'length'});
    % tag N
    S.dim_txt(12) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*3.05, pdy+py-dd_dy*4, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'N'});
    % tag az
    S.dim_txt(13) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*3.05, pdy+py-dd_dy*5, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'AZ'});
    % tag el
    S.dim_txt(14) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*3.05, pdy+py-dd_dy*6, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'EL'});
    % tag
    S.dim_tag(1) = uicontrol('style','text',...
             'units','pixels',...
             'position', [tx*2.5, pdy+py, dd_dx*2, dd_dy],...
             'visible','on',...
             'string',{'Tag (Solenoid)'});
         %}
   %% text edit
   % ELLIPTICAL
   edx = px+pdx+dd_dx; 
    % h
    S.ep_in(1) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'3.15'});          
    % ra
    S.ep_in(2) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*2, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'68.38'});
    % ri
    S.ep_in(3) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*3, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'48.88'});          
    % wT
    S.ep_in(4) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*4, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'30'});
    % N
    S.ep_in(5) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*5, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'14'});
    % O
    S.ep_in(6) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*7, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'1'});          
    % phi
    S.ep_in(7) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*8, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'20'});   
    % W
    S.ep_in(8) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*2, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'68.38'});
    % L
    S.ep_in(9) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*3, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'48.88'});   
    % Nxy
    S.ep_in(10) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*6, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'14'});
    % I
    S.ep_in(11) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*9, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'1'}); 
             
    dd_dx = 40; dd_dy = 25;
    % Nx
    S.dim_ep(1) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*1.5, pdy+py-dd_dy*1.5, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'50'});
    % xmin
    S.dim_ep(2) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*1.5+dd_dx, pdy+py-dd_dy*1.5, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'-70'});
    % xmax
    S.dim_ep(3) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*1.5+dd_dx*2, pdy+py-dd_dy*1.5, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'70'});      
    % Ny
    S.dim_ep(4) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*1.5, pdy+py-dd_dy*3.25, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'50'});
    % ymin
    S.dim_ep(5) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*1.5+dd_dx, pdy+py-dd_dy*3.25, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'-70'});
    % ymax
    S.dim_ep(6) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*1.5+dd_dx*2, pdy+py-dd_dy*3.25, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'70'});         
    % Nz
    S.dim_ep(7) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*1.5, pdy+py-dd_dy*4.95, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'50'});
    % zmin
    S.dim_ep(8) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*1.5+dd_dx, pdy+py-dd_dy*4.95, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'-6'});
    % zmax
    S.dim_ep(9) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*1.5+dd_dx*2, pdy+py-dd_dy*4.95, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'6'});
    % tag_radius
    S.dim_tag(1) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*3.05+dd_dx, pdy+py-dd_dy*1.75, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'0.5'});
    % tag_length
    S.dim_tag(2) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*3.05+dd_dx, pdy+py-dd_dy*2.75, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'7'});
    % tag N
    S.dim_tag(3) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*3.05+dd_dx, pdy+py-dd_dy*3.75, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'250'});
    % tag az
    S.dim_tag(4) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*3.05+dd_dx, pdy+py-dd_dy*4.75, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'0'});
    % tag el
    S.dim_tag(5) = uicontrol('style','edit',...
             'units','pixels',...
             'position', [tx*3.05+dd_dx, pdy+py-dd_dy*5.75, dd_dx, dd_dy],...
             'visible','on',...
             'string',{'0'});
         %}
% Callbacks: Set remaining properties.
    set(S.tg(:),{'callback'},{{@tg_call,S}});
end

% Callback for togglebuttons
function [] = tg_call(varargin)
    ddList = {'m','cm','mm','in'};
    hList  = {'mil','m','cm','mm','in'};
    wtList = {'AWG','m','cm','mm','in'};
    dList  = {'deg','rad'}; 
    aList  = {'A','mA','uA','nA'};
    sList  = {'F','S'};
    AntDim.v = 'r';
    [h,S] = varargin{[1,3]};  % Get calling handle ans structure.
    getappdata(S.fh);
    
    % ZZ = get(S.ax,'children');  % The line object.
        switch h
            %RECTANGULAR
            case S.tg(1)    
                %set([S.axB,S.dd],{'visible'},{'on'});
                set([S.ep_in(2),S.ep_in(3),S.ep_txt(2),S.ep_txt(3),S.dd],{'visible'},{'off'});
                set([S.ep_in(8),S.ep_in(9),S.ep_txt(8),S.ep_txt(9),S.dd],{'visible'},{'on'});
                % AntDim.v = 'r';
                % r-->1
                set(S.fh,'UserData',struct('v',1));
            
            % ELLIPTICAL
            case S.tg(2)   
                % e--> 2
                %set([S.axB],{'visible'},{'off'});
                set([S.ep_in(2),S.ep_in(3),S.ep_txt(2),S.ep_txt(3),S.dd],{'visible'},{'on'});
                set([S.ep_in(8),S.ep_in(9),S.ep_txt(8),S.ep_txt(9)],{'visible'},{'off'});
                %AntDim.v = 'e';
                set(S.fh,'UserData',struct('v',2));
            
            % IMPORT
            case S.tg(3) 
                % k-->3
                %AntDim.v = 'k';
                set(S.fh,'UserData',struct('v',3));
            
            % RUN
            case S.tg(4) 
                % Update Units
                Units.h     = hList{S.dd(1).Value};
                Units.W     = ddList{S.dd(2).Value};
                Units.L     = ddList{S.dd(3).Value};
                Units.wT    = wtList{S.dd(4).Value};
                Units.phi   = dList{S.dd(5).Value};
                Units.dimx  = ddList{S.dim_dd(1).Value};
                Units.dimy  = ddList{S.dim_dd(2).Value};
                Units.dimz  = ddList{S.dim_dd(3).Value};
                Units.dimI  = aList{S.dim_dd(4).Value};
                Units.dimBF = sList{S.dim_dd(5).Value};
                Units.tagR  = ddList{S.tag_dd(1).Value};
                Units.tagL  = ddList{S.tag_dd(2).Value};
                Units.tagAZ = dList{S.tag_dd(3).Value};
                Units.tagEL = dList{S.tag_dd(4).Value};
                % Update Antenna Dims
                AntDim.h   = str2double(char(S.ep_in(1).String));
                AntDim.ra  = str2double(char(S.ep_in(2).String));
                AntDim.ri  = str2double(char(S.ep_in(3).String));
                AntDim.wT  = str2double(char(S.ep_in(4).String));
                AntDim.N   = str2double(char(S.ep_in(5).String));
                AntDim.O   = str2double(char(S.ep_in(6).String));
                AntDim.phi = str2double(char(S.ep_in(7).String));
                AntDim.W   = str2double(char(S.ep_in(8).String));
                AntDim.L   = str2double(char(S.ep_in(9).String));
                AntDim.Nxy = str2double(char(S.ep_in(10).String));
                AntDim.I   = str2double(char(S.ep_in(11).String));
                AntDim.v   = S.fh.UserData.v;
                % Update B-Fields Dims
                Bdim.Nx   = str2double(char(S.dim_ep(1).String));
                Bdim.xmin = str2double(char(S.dim_ep(2).String));   
                Bdim.xmax = str2double(char(S.dim_ep(3).String));  
                Bdim.Ny   = str2double(char(S.dim_ep(4).String)); 
                Bdim.ymin = str2double(char(S.dim_ep(5).String));  
                Bdim.ymax = str2double(char(S.dim_ep(6).String)); 
                Bdim.Nz   = str2double(char(S.dim_ep(7).String)); 
                Bdim.zmin = str2double(char(S.dim_ep(8).String)); 
                Bdim.zmax = str2double(char(S.dim_ep(9).String));
                Bdim.v    = sList{S.dim_dd(5).Value};
                
                % tag (solenoid)
                Tag.r  = str2double(char(S.dim_tag(1).String));
                Tag.L  = str2double(char(S.dim_tag(2).String));
                Tag.N  = str2double(char(S.dim_tag(3).String));
                Tag.AZ = str2double(char(S.dim_tag(4).String));
                Tag.EL = str2double(char(S.dim_tag(5).String));
                Tag.ur = 2099;
                
                % plots tag (solenoid)
                [Tx,Ty,Tz] = sph2cart(Tag.AZ,Tag.EL,Tag.L);
                Tx=[0,Tx]; Ty=[0,Ty]; Tz=[0,Tz];
                PLOT_TAG = plot3(Tx,Ty,Tz,'Parent',S.axT);
                grid on; 
                
                % runs main code
                %[A,B] =  main_UI(Units,AntDim,Bdim,Tag);
                [A,B,RR] =  main_UI(Units,AntDim,Bdim,Tag);
                % save A and B data into figure properties 'Userdata'
                set(S.fh,'UserData',struct('wireAnt',A,'BFields',B,...
                    'readRange',RR));
                
                % plots
                nx = round(Bdim.Nx/2);
                ny = round(Bdim.Ny/2);
                nz = round(Bdim.Nz/2);
                %HH = quiver3(S.bX(nn,:,:),S.bZ(nn,:,:),S.bY(nn,:,:),...
                %    S.BX(nn,:,:),S.BZ(nn,:,:),S.BY(nn,:,:));
                
                % quiver
                BQ=quiver3(B.X(nn,:,:),B.Z(nn,:,:),...
                        B.Y(nn,:,:),B.BX(nn,:,:),B.BY(nn,:,:),...
                        B.BZ(nn,:,:),'w','Parent',S.axB);
                hold all;
                % contour
                normB=sqrt(B.BX.^2+B.BY.^2+B.BZ.^2);
                X2 = squeeze(B.X(nn,:,:));
                Y2 = squeeze(B.Y(nn,:,:));
                Z2 = squeeze(B.Z(nn,:,:));
                B2 = squeeze(normB(nn,:,:)); 
                contourf(X2,Z2,B2,'Parent',S.axB);
                % set(S.axB,'contourcbar');
                view(0,-90); grid on; axis tight;
                set(S.axB.YLabel,'String','z[m]','FontWeight','bold',...
                    'FontSize',12);
                set(S.axB.XLabel,'String','x[m]','FontWeight','bold',...
                    'FontSize',12); 
                set(S.axB.Title,'String',...
                    'Coiled Wire Antenna:B-Fields (Model)',...
                    'FontWeight','bold','FontSize', 16);
                %set(S.axB,'xlim',[-0.2 0.2]);
                %set(S.axB,'ylim',[-0.5 0.9]);
                view(0,90)
                %d = 'done'
                % END: quiver
                
            % EXPORT
            case S.tg(5) 
                % location of bfields
                newX = reshape(S.fh.UserData.BFields.X,...
                    numel(S.fh.UserData.BFields.BX),1);
                newY = reshape(S.fh.UserData.BFields.Y,...
                    numel(S.fh.UserData.BFields.Y),1);
                newZ = reshape(S.fh.UserData.BFields.Z,...
                    numel(S.fh.UserData.BFields.Z),1);
                % bfields
                newBX = reshape(S.fh.UserData.BFields.BX,...
                    numel(S.fh.UserData.BFields.BX),1);
                newBY = reshape(S.fh.UserData.BFields.BY,...
                    numel(S.fh.UserData.BFields.BY),1);
                newBZ = reshape(S.fh.UserData.BFields.BZ,...
                    numel(S.fh.UserData.BFields.BZ),1);
                dataM = [newX,newY,newZ,newBX,newBY,newBZ];
                T = array2table(dataM);
                T.Properties.VariableNames(1,1:6) = {'x','y','z',...
                    'BX','BY','BZ'};
                writetable(T,'BFields.csv');
                
                % antenna spatial coordinates [xyz]
                dataM = [S.fh.UserData.wireAnt.X,...
                    S.fh.UserData.wireAnt.Y,S.fh.UserData.wireAnt.Z];
                T = array2table(dataM);
                T.Properties.VariableNames(1,1:3) = {'x','y','z'};
                writetable(T,'Antenna_Wire_Coordinates.csv');
                
            % Tag    
            case S.tg(7)
                % get data 
                Units.tagR  = ddList{S.tag_dd(1).Value};
                Units.tagL  = ddList{S.tag_dd(2).Value};
                Units.tagAZ = dList{S.tag_dd(3).Value};
                Units.tagEL = dList{S.tag_dd(4).Value};
                % update data
                Tag.r  = str2double(char(S.dim_tag(1).String));
                Tag.L  = str2double(char(S.dim_tag(2).String));
                Tag.N  = str2double(char(S.dim_tag(3).String));
                Tag.AZ = str2double(char(S.dim_tag(4).String));
                Tag.EL = str2double(char(S.dim_tag(5).String));
                Tag.ur = 2099;
                % plots tag (solenoid)
                [Tx,Ty,Tz] = sph2cart(Tag.AZ,Tag.EL,Tag.L);
                Tx=[0,Tx]; Ty=[0,Ty]; Tz=[0,Tz];
                view(-41,27);
                PLOT_TAG = plot3(Tx,Ty,Tz,'Parent',S.axT);
                xlabel('x');ylabel('y');zlabel('z');
                grid on; 
                
            %case S.tg(6) % ABOUT
            %}
            
            % plot wire antenna
            case S.tg(8)
                if(numel(S.fh.UserData.wireAnt.X)>1)
                    plot3(S.fh.UserData.wireAnt.X,...
                        S.fh.UserData.wireAnt.Y,...
                        S.fh.UserData.wireAnt.Z,...
                        'Parent',S.axB);
                else
                    msbx = msgbox('No Antenna Wire Points. Run Code.');
                end
                
            % plot B-Fileds
            case S.tg(9)
                if(numel(S.fh.UserData.BFields.BX)>2)
                    % quiver
                    B.X  = S.fh.UserData.BFields.X;
                    B.Y  = S.fh.UserData.BFields.Y;
                    B.Z  = S.fh.UserData.BFields.Z;
                    B.BX = S.fh.UserData.BFields.BX;
                    B.BY = S.fh.UserData.BFields.BY;
                    B.BZ = S.fh.UserData.BFields.BZ;
                    BQ=quiver3(B.X(nn,:,:),B.Z(nn,:,:),...
                            B.Y(nn,:,:),B.BX(nn,:,:),B.BY(nn,:,:),...
                            B.BZ(nn,:,:),'w','Parent',S.axB);
                    hold all;
                    % contour
                    normB=sqrt(B.BX.^2+B.BY.^2+B.BZ.^2);
                    X2 = squeeze(B.X(nn,:,:));
                    Y2 = squeeze(B.Y(nn,:,:));
                    Z2 = squeeze(B.Z(nn,:,:));
                    B2 = squeeze(normB(nn,:,:)); 
                    contourf(X2,Z2,B2,'Parent',S.axB);
                    % set(S.axB,'contourcbar');
                    view(0,-90); grid on; axis tight;
                    set(S.axB.YLabel,'String','z[m]','FontWeight','bold',...
                        'FontSize',12);
                    set(S.axB.XLabel,'String','x[m]','FontWeight','bold',...
                        'FontSize',12); 
                    set(S.axB.Title,'String',...
                        'Coiled Wire Antenna:B-Fields (Model)',...
                        'FontWeight','bold','FontSize', 16);
                    %set(S.axB,'xlim',[-0.2 0.2]);
                    %set(S.axB,'ylim',[-0.5 0.9]);
                    view(0,90)
                    %d = 'done'
                    % END: quiver
                else
                    msbx = msgbox('No BFields. Run Code.');
                end
                
            % plot read-range
            case S.tg(10)

                
            otherwise       % IMPORT
                set([S.ax],{'visible'},{'off'});
        end 
    end