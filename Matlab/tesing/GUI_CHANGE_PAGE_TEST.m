function [] = GUI_CHANGE_PAGE_TEST()
    %%
    SCR = get(0,'Screensize');
    % creates figure
    fx = SCR(3)/4-200; fy = SCR(4)/4-200; fdx = 825; fdy = 400;
    S.fh = figure('numbertitle','off',...
                  'menubar','none',...
                  'units','pixels',...
                  'position',[fx ,fy , fdx, fdy],...
                  'name','Wire Antenna Design Tool',...
                  'resize','off');
    % creates empty plot
    px=50; py=100; pdx=300; pdy=230;
    S.ax = axes('units','pixels','position',[50 100 300 230]);
    
    % Toggles will act as the tabs.              
    tg_x  = 5; tg_y  = 355; tg_px = 90; tg_py = 40;
    S.tg(1) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x, tg_y, tg_px, tg_py],...
                        'string','Rectangular',...
                        'val',1);
    S.tg(2) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+tg_px, tg_y, tg_px, tg_py],...
                        'string','Elliptical',...
                        'value',1,...
                        'enable','on');
    S.tg(3) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+2*tg_px tg_y tg_px tg_py],...
                        'string','Import',...
                        'value',1,...
                        'enable','on');
    S.tg(4) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+6*tg_px tg_y tg_px tg_py],...
                        'string','Run',...
                        'value',1,...
                        'enable','on');
    S.tg(4) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+7*tg_px tg_y tg_px tg_py],...
                        'string','Export',...
                        'value',1,...
                        'enable','on');
    S.tg(4) = uicontrol('style','toggle',...
                        'units','pixels',...
                        'position',[tg_x+8*tg_px tg_y tg_px tg_py],...
                        'string','About',...
                        'value',1,...
                        'enable','on');
%% drop down list
    ddList  = {'[m]','[cm]','[mm]','[in]'};
    dd_dx = 50; dd_dy = 25; 
    tx=px+pdx;
    ddx = tx+dd_dx*2;
    % h
    S.dd(1) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx, pdy+py-dd_dy*1.05, dd_dx, dd_dy],...
                 'string',ddList);  
    % ra
    S.dd(2) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx,pdy+py-dd_dy*2.05, dd_dx, dd_dy],...
                 'string',ddList);  
    % ri
    S.dd(3) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx, pdy+py-dd_dy*3.05, dd_dx, dd_dy],...
                 'string',ddList);  
    % wT
    S.dd(4) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx, pdy+py-dd_dy*4.05, dd_dx, dd_dy],...
                 'string',{'AWG','[m]','[cm]','[mm]','[in]'});
    % phi
    S.dd(5) = uicontrol('style','popupmenu',...
                 'units','pixels',...
                 'position',[ddx, pdy+py-dd_dy*7.05, dd_dx, dd_dy],...
                 'string',{'deg','rad'});    
%% text 
    % h
    S.ep_txt(1) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*1.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'h'});          
    % ra
    S.ep_txt(2) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*2.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'ra'});
    % ri
    S.ep_txt(3) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*3.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'ri'});          
    % wT
    S.ep_txt(4) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*4.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'wT'});
    % N
    S.ep_txt(5) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*5.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'N'});
    % O
    S.ep_txt(6) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*6.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'O'});          
    % phi
    S.ep_txt(7) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*7.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'phi'});
    % W
    S.ep_txt(8) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*2.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'W'});
    % L
    S.ep_txt(9) = uicontrol('style','text',...
                 'units','pixels',...
                 'position', [tx, pdy+py-dd_dy*3.25, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'L'}); 
   %% text edit
   % ELLIPTICAL
   edx = px+pdx+dd_dx; 
   S.ep_in(1) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'00'});          
    % ra
    S.ep_in(2) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*2, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'00'});
    % ri
    S.ep_in(3) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*3, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'00'});          
    % wT
    S.ep_in(4) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*4, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'00'});
    % N
    S.ep_in(5) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*5, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'00'});
    % O
    S.ep_in(6) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*6, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'00'});          
    % phi
    S.ep_in(7) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*7, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'00'});   
    % ra
    S.ep_in(8) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*2, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'00'});
    % ri
    S.ep_in(9) = uicontrol('style','edit',...
                 'units','pixels',...
                 'position', [edx, pdy+py-dd_dy*3, dd_dx, dd_dy],...
                 'visible','on',...
                 'string',{'00'});     
    %% Callbacks: Set remaining properties.
    % toggles
    set(S.tg(:),{'callback'},{{@tg_call,S}})

% Callback for togglebuttons
    function [] = tg_call(varargin)
    [h,S] = varargin{[1,3]};  % Get calling handle ans structure.
    L = get(S.ax,'children');  % The line object.

    switch h
        case S.tg(1)    %RECTANGULAR
            set([S.ax,S.dd],{'visible'},{'on'});
            set([S.ep_in(2),S.ep_in(3),S.ep_txt(2),S.ep_txt(3),S.dd],{'visible'},{'off'});
            set([S.ep_in(8),S.ep_in(9),S.ep_txt(8),S.ep_txt(9),S.dd],{'visible'},{'on'});
        case S.tg(2)    % ELLIPTICAL
            set([S.ax],{'visible'},{'on'});
            set([S.ep_in(2),S.ep_in(3),S.ep_txt(2),S.ep_txt(3),S.dd],{'visible'},{'on'});
            set([S.ep_in(8),S.ep_in(9),S.ep_txt(8),S.ep_txt(9)],{'visible'},{'off'});
        otherwise       % IMPORT
            set([S.ax],{'visible'},{'off'});
    end